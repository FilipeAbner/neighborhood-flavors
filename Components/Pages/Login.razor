@page "/login"
@rendermode InteractiveServer
@inject UserService userService
@inject RestaurantService restaurantService
@inject NavigationManager navigationManager

@inject StateContainer stateContainer

<PageTitle>Login</PageTitle>
<div class="d-flex align-items-center justify-content-center vh-100">
    <div class="container ">
        <div class="row justify-content-center">
            <div class="col-md-4">
                <div class="card mt-5">
                    <div class="card-body">
                        <h3 class="card-title text-center">Login</h3>

                        <div>
                            <div class="form-group mt-4">

                                <label for="Email">Email</label>
                                <input type="text" class="form-control" id="Email" placeholder="Digite seu email"
                                    @bind="Email" />
                            </div>

                            <div class="form-group mt-4">
                                <label for="Senha">Senha</label>
                                <input type="password" class="form-control" id="Senha" placeholder="Digite sua senha"
                                    @bind="Password" />
                            </div>

                            <div class="d-grid gap-2 col-6 mt-4 mx-auto">
                                <button class="btn btn-primary btn-block" @onclick="LoginUser">Login</button>
                            </div>
                        </div>
                    </div>
                </div>
                <span class="text-danger">@errorMessage</span>
            </div>
        </div>
    </div>
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string errorMessage = string.Empty;

    private User? user = new();

    private async Task LoginUser()
    {
        user = await userService.GetUserByEmailAndPassword(Email, Password);
        if (user != null)
        {
            var restaurant = await restaurantService.GetRestaurantByUserIdAsync(user.Id);

            if (restaurant == null)
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                stateContainer.CurrentRestaurant = restaurant;
                stateContainer.CurrentUser = user;
                navigationManager.NavigateTo("/manage-menu");
            }
        }

        else
        {
            errorMessage = "Credenciais inv√°lidas. Tente novamente.";
        }
    }
} using Microsoft.EntityFrameworkCore;
